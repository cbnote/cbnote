name: Publish (Dev)

on:
  push:
    branches-ignore:
      - 'main'
    tags-ignore:
      - '**'
    paths:
      - '.github/workflows/publish-dev-auth.yml'
      - 'Auth/**'
      - 'Data/**'
      - 'Encryption/**'
      - 'Logging/**'
      - 'Notes/**'
      - 'Tests/**'
      - 'Util/**'

jobs:
  restore-build-test-publish-push:
    runs-on: ubuntu-latest
    steps:
    - 
      name: Prepare - Checkout Code
      uses: actions/checkout@v2
    -
      name: Prepare - Read image version
      uses: bencgreen/read-file-action@v1
      with:
        path: Version
      id: version
    -
      name: Prepare - Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Prepare - Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Prepare - Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - 
      name: Prepare - Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x'
    - 
      name: A - Restore
      run: dotnet restore ./Test.csproj
    - 
      name: B - Build
      run: dotnet build ./Test.csproj --no-restore -c Release
    #- 
    #  name: C - Test
    #  run: dotnet test Test.csproj --no-restore --no-build -c Release --verbosity normal
    -
      name: D - Publish
      run: dotnet publish ./Auth/Strasnote.Auth.Api/Strasnote.Auth.Api.csproj -c Release -o ./publish
    -
      name: E - Push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Auth/Strasnote.Auth.Api/Dockerfile
        push: true
        platforms: linux/amd64,linux/arm64
        tags: |
          strasnote/auth:dev
          strasnote/auth:${{ steps.version.outputs.content }}-dev
    -
      name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
